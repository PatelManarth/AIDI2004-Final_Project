name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: "docker:latest"
        options: "--privileged"
        ports:
          - 8000:8000
          - 8501:8501

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    # Step 4: Run the tests
    - name: Run pytest
      run: |
        pytest test_dangerous_object_detection.py --maxfail=1 --disable-warnings

    # Step 5: Clean up (Optional)
    - name: Cleanup
      run: |
        echo "Cleaning up..."

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install SSH key to connect to Azure VM
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}

    # Step 3: Deploy to Azure VM
    - name: Deploy to VM
      run: |
        ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.VM_IP }} << 'EOF'
          cd /home/azureuser/final-project/AIDI2004-Final_Project
          git pull origin main
          source /home/azureuser/venv/bin/activate
          sudo systemctl restart fastapi
          sudo systemctl restart streamlit
        EOF

    # Step 4: Notify deployment success (Optional)
    - name: Notify deployment success
      run: echo "Deployment to Azure VM completed successfully!"
